/* tslint:disable */
/* eslint-disable */
/**
 * Bitrise API
 * Official REST API for Bitrise.io
 *
 * The version of the OpenAPI document: 0.1
 * Contact: letsconnect@bitrise.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AddonsSetupInstruction } from './AddonsSetupInstruction';
import {
    AddonsSetupInstructionFromJSON,
    AddonsSetupInstructionFromJSONTyped,
    AddonsSetupInstructionToJSON,
    AddonsSetupInstructionToJSONTyped,
} from './AddonsSetupInstruction';

/**
 * 
 * @export
 * @interface AddonsSetupGuide
 */
export interface AddonsSetupGuide {
    /**
     * 
     * @type {Array<AddonsSetupInstruction>}
     * @memberof AddonsSetupGuide
     */
    instructions?: Array<AddonsSetupInstruction>;
    /**
     * 
     * @type {string}
     * @memberof AddonsSetupGuide
     */
    notification?: string;
}

/**
 * Check if a given object implements the AddonsSetupGuide interface.
 */
export function instanceOfAddonsSetupGuide(value: object): value is AddonsSetupGuide {
    return true;
}

export function AddonsSetupGuideFromJSON(json: any): AddonsSetupGuide {
    return AddonsSetupGuideFromJSONTyped(json, false);
}

export function AddonsSetupGuideFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddonsSetupGuide {
    if (json == null) {
        return json;
    }
    return {
        
        'instructions': json['instructions'] == null ? undefined : ((json['instructions'] as Array<any>).map(AddonsSetupInstructionFromJSON)),
        'notification': json['notification'] == null ? undefined : json['notification'],
    };
}

export function AddonsSetupGuideToJSON(json: any): AddonsSetupGuide {
    return AddonsSetupGuideToJSONTyped(json, false);
}

export function AddonsSetupGuideToJSONTyped(value?: AddonsSetupGuide | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'instructions': value['instructions'] == null ? undefined : ((value['instructions'] as Array<any>).map(AddonsSetupInstructionToJSON)),
        'notification': value['notification'],
    };
}

