/* tslint:disable */
/* eslint-disable */
/**
 * Bitrise API
 * Official REST API for Bitrise.io
 *
 * The version of the OpenAPI document: 0.1
 * Contact: letsconnect@bitrise.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface V0AppFinishParams
 */
export interface V0AppFinishParams {
    /**
     * Which config to use. Specify a config that matches your project type (e. g. `default-android-config` for `android`, etc.). If not speficied, default value is `other-config`. The available values are `default-android-config`, `default-cordova-config`, `default-fastlane-android-config`, `default-fastlane-ios-config`, `flutter-config-test-android-2`, `flutter-config-test-both-0`, `flutter-config-test-ios-1`, `default-ionic-config`, `default-ios-config`, `default-macos-config`, `default-react-native-config`, `default-react-native-expo-config`, `other-config`.
     * @type {string}
     * @memberof V0AppFinishParams
     */
    config?: string;
    /**
     * Environment variables for the application workflows, e.g. {"env1":"val1","env2":"val2"}
     * @type {{ [key: string]: string; }}
     * @memberof V0AppFinishParams
     */
    envs?: { [key: string]: string; };
    /**
     * config specification mode, has to be specified with `manual` value
     * @type {string}
     * @memberof V0AppFinishParams
     */
    mode?: string;
    /**
     * The slug of the organization, who will be the owner of the application, if it's not specified, then the authenticated user will be the owner
     * @type {string}
     * @memberof V0AppFinishParams
     */
    organizationSlug?: string;
    /**
     * The type of your project (`android`, `ios`, `cordova`, `other`, `xamarin`, `macos`, `ionic`, `react-native`, `fastlane`, `flutter`, null)
     * @type {string}
     * @memberof V0AppFinishParams
     */
    projectType: string;
    /**
     * The id of the stack the application will be built (these can be found in the [system report](https://github.com/bitrise-io/bitrise.io/tree/master/system_reports) file names)
     * @type {string}
     * @memberof V0AppFinishParams
     */
    stackId: string;
}

/**
 * Check if a given object implements the V0AppFinishParams interface.
 */
export function instanceOfV0AppFinishParams(value: object): value is V0AppFinishParams {
    if (!('projectType' in value) || value['projectType'] === undefined) return false;
    if (!('stackId' in value) || value['stackId'] === undefined) return false;
    return true;
}

export function V0AppFinishParamsFromJSON(json: any): V0AppFinishParams {
    return V0AppFinishParamsFromJSONTyped(json, false);
}

export function V0AppFinishParamsFromJSONTyped(json: any, ignoreDiscriminator: boolean): V0AppFinishParams {
    if (json == null) {
        return json;
    }
    return {
        
        'config': json['config'] == null ? undefined : json['config'],
        'envs': json['envs'] == null ? undefined : json['envs'],
        'mode': json['mode'] == null ? undefined : json['mode'],
        'organizationSlug': json['organization_slug'] == null ? undefined : json['organization_slug'],
        'projectType': json['project_type'],
        'stackId': json['stack_id'],
    };
}

export function V0AppFinishParamsToJSON(json: any): V0AppFinishParams {
    return V0AppFinishParamsToJSONTyped(json, false);
}

export function V0AppFinishParamsToJSONTyped(value?: V0AppFinishParams | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'config': value['config'],
        'envs': value['envs'],
        'mode': value['mode'],
        'organization_slug': value['organizationSlug'],
        'project_type': value['projectType'],
        'stack_id': value['stackId'],
    };
}

