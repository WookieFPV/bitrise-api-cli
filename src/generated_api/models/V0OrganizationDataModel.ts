/* tslint:disable */
/* eslint-disable */
/**
 * Bitrise API
 * Official REST API for Bitrise.io
 *
 * The version of the OpenAPI document: 0.1
 * Contact: letsconnect@bitrise.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { V0OrganizationOwner } from './V0OrganizationOwner';
import {
    V0OrganizationOwnerFromJSON,
    V0OrganizationOwnerFromJSONTyped,
    V0OrganizationOwnerToJSON,
    V0OrganizationOwnerToJSONTyped,
} from './V0OrganizationOwner';

/**
 * 
 * @export
 * @interface V0OrganizationDataModel
 */
export interface V0OrganizationDataModel {
    /**
     * 
     * @type {string}
     * @memberof V0OrganizationDataModel
     */
    avatarIconUrl?: string;
    /**
     * 
     * @type {number}
     * @memberof V0OrganizationDataModel
     */
    concurrencyCount?: number;
    /**
     * 
     * @type {string}
     * @memberof V0OrganizationDataModel
     */
    name?: string;
    /**
     * 
     * @type {Array<V0OrganizationOwner>}
     * @memberof V0OrganizationDataModel
     */
    owners?: Array<V0OrganizationOwner>;
    /**
     * 
     * @type {string}
     * @memberof V0OrganizationDataModel
     */
    slug?: string;
}

/**
 * Check if a given object implements the V0OrganizationDataModel interface.
 */
export function instanceOfV0OrganizationDataModel(value: object): value is V0OrganizationDataModel {
    return true;
}

export function V0OrganizationDataModelFromJSON(json: any): V0OrganizationDataModel {
    return V0OrganizationDataModelFromJSONTyped(json, false);
}

export function V0OrganizationDataModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): V0OrganizationDataModel {
    if (json == null) {
        return json;
    }
    return {
        
        'avatarIconUrl': json['avatar_icon_url'] == null ? undefined : json['avatar_icon_url'],
        'concurrencyCount': json['concurrency_count'] == null ? undefined : json['concurrency_count'],
        'name': json['name'] == null ? undefined : json['name'],
        'owners': json['owners'] == null ? undefined : ((json['owners'] as Array<any>).map(V0OrganizationOwnerFromJSON)),
        'slug': json['slug'] == null ? undefined : json['slug'],
    };
}

export function V0OrganizationDataModelToJSON(json: any): V0OrganizationDataModel {
    return V0OrganizationDataModelToJSONTyped(json, false);
}

export function V0OrganizationDataModelToJSONTyped(value?: V0OrganizationDataModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'avatar_icon_url': value['avatarIconUrl'],
        'concurrency_count': value['concurrencyCount'],
        'name': value['name'],
        'owners': value['owners'] == null ? undefined : ((value['owners'] as Array<any>).map(V0OrganizationOwnerToJSON)),
        'slug': value['slug'],
    };
}

