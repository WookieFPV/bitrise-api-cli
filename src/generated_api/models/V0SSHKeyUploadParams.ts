/* tslint:disable */
/* eslint-disable */
/**
 * Bitrise API
 * Official REST API for Bitrise.io
 *
 * The version of the OpenAPI document: 0.1
 * Contact: letsconnect@bitrise.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface V0SSHKeyUploadParams
 */
export interface V0SSHKeyUploadParams {
    /**
     * The private part of the SSH key you would like to use
     * @type {string}
     * @memberof V0SSHKeyUploadParams
     */
    authSshPrivateKey: string;
    /**
     * The public part of the SSH key you would like to use
     * @type {string}
     * @memberof V0SSHKeyUploadParams
     */
    authSshPublicKey: string;
    /**
     * If it's set to true, the provided SSH key will be registered at the provider of the application
     * @type {boolean}
     * @memberof V0SSHKeyUploadParams
     */
    isRegisterKeyIntoProviderService?: boolean;
}

/**
 * Check if a given object implements the V0SSHKeyUploadParams interface.
 */
export function instanceOfV0SSHKeyUploadParams(value: object): value is V0SSHKeyUploadParams {
    if (!('authSshPrivateKey' in value) || value['authSshPrivateKey'] === undefined) return false;
    if (!('authSshPublicKey' in value) || value['authSshPublicKey'] === undefined) return false;
    return true;
}

export function V0SSHKeyUploadParamsFromJSON(json: any): V0SSHKeyUploadParams {
    return V0SSHKeyUploadParamsFromJSONTyped(json, false);
}

export function V0SSHKeyUploadParamsFromJSONTyped(json: any, ignoreDiscriminator: boolean): V0SSHKeyUploadParams {
    if (json == null) {
        return json;
    }
    return {
        
        'authSshPrivateKey': json['auth_ssh_private_key'],
        'authSshPublicKey': json['auth_ssh_public_key'],
        'isRegisterKeyIntoProviderService': json['is_register_key_into_provider_service'] == null ? undefined : json['is_register_key_into_provider_service'],
    };
}

export function V0SSHKeyUploadParamsToJSON(json: any): V0SSHKeyUploadParams {
    return V0SSHKeyUploadParamsToJSONTyped(json, false);
}

export function V0SSHKeyUploadParamsToJSONTyped(value?: V0SSHKeyUploadParams | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'auth_ssh_private_key': value['authSshPrivateKey'],
        'auth_ssh_public_key': value['authSshPublicKey'],
        'is_register_key_into_provider_service': value['isRegisterKeyIntoProviderService'],
    };
}

