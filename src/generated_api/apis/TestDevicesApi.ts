/* tslint:disable */
/* eslint-disable */
/**
 * Bitrise API
 * Official REST API for Bitrise.io
 *
 * The version of the OpenAPI document: 0.1
 * Contact: letsconnect@bitrise.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ServiceStandardErrorRespModel,
  V0TestDeviceListResponseModel,
} from '../models/index';
import {
    ServiceStandardErrorRespModelFromJSON,
    ServiceStandardErrorRespModelToJSON,
    V0TestDeviceListResponseModelFromJSON,
    V0TestDeviceListResponseModelToJSON,
} from '../models/index';

export interface TestDeviceListRequest {
    appSlug: string;
}

/**
 * 
 */
export class TestDevicesApi extends runtime.BaseAPI {

    /**
     * List registered test devices of all members of a specified Bitrise app
     * List the test devices for an app
     */
    async testDeviceListRaw(requestParameters: TestDeviceListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<V0TestDeviceListResponseModel>> {
        if (requestParameters['appSlug'] == null) {
            throw new runtime.RequiredError(
                'appSlug',
                'Required parameter "appSlug" was null or undefined when calling testDeviceList().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Bitrise-Addon-Auth-Token"] = await this.configuration.apiKey("Bitrise-Addon-Auth-Token"); // AddonAuthToken authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // PersonalAccessToken authentication
        }

        const response = await this.request({
            path: `/apps/{app-slug}/test-devices`.replace(`{${"app-slug"}}`, encodeURIComponent(String(requestParameters['appSlug']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => V0TestDeviceListResponseModelFromJSON(jsonValue));
    }

    /**
     * List registered test devices of all members of a specified Bitrise app
     * List the test devices for an app
     */
    async testDeviceList(requestParameters: TestDeviceListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<V0TestDeviceListResponseModel> {
        const response = await this.testDeviceListRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
