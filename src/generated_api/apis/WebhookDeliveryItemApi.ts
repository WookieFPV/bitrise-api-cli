/* tslint:disable */
/* eslint-disable */
/**
 * Bitrise API
 * Official REST API for Bitrise.io
 *
 * The version of the OpenAPI document: 0.1
 * Contact: letsconnect@bitrise.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ServiceStandardErrorRespModel,
  V0WebhookDeliveryItemResponseModel,
  V0WebhookDeliveryItemShowResponseModel,
} from '../models/index';
import {
    ServiceStandardErrorRespModelFromJSON,
    ServiceStandardErrorRespModelToJSON,
    V0WebhookDeliveryItemResponseModelFromJSON,
    V0WebhookDeliveryItemResponseModelToJSON,
    V0WebhookDeliveryItemShowResponseModelFromJSON,
    V0WebhookDeliveryItemShowResponseModelToJSON,
} from '../models/index';

export interface WebhookDeliveryItemListRequest {
    appSlug: string;
    appWebhookSlug: string;
    next?: string;
    limit?: number;
}

export interface WebhookDeliveryItemRedeliverRequest {
    appSlug: string;
    appWebhookSlug: string;
    webhookDeliveryItemSlug: string;
}

export interface WebhookDeliveryItemShowRequest {
    appSlug: string;
    appWebhookSlug: string;
    webhookDeliveryItemSlug: string;
}

/**
 * 
 */
export class WebhookDeliveryItemApi extends runtime.BaseAPI {

    /**
     * List all the delivery items of an outgoing webhook of a Bitrise application
     * List the webhook delivery items of an app
     */
    async webhookDeliveryItemListRaw(requestParameters: WebhookDeliveryItemListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<V0WebhookDeliveryItemShowResponseModel>> {
        if (requestParameters['appSlug'] == null) {
            throw new runtime.RequiredError(
                'appSlug',
                'Required parameter "appSlug" was null or undefined when calling webhookDeliveryItemList().'
            );
        }

        if (requestParameters['appWebhookSlug'] == null) {
            throw new runtime.RequiredError(
                'appWebhookSlug',
                'Required parameter "appWebhookSlug" was null or undefined when calling webhookDeliveryItemList().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['next'] != null) {
            queryParameters['next'] = requestParameters['next'];
        }

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // PersonalAccessToken authentication
        }

        const response = await this.request({
            path: `/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items`.replace(`{${"app-slug"}}`, encodeURIComponent(String(requestParameters['appSlug']))).replace(`{${"app-webhook-slug"}}`, encodeURIComponent(String(requestParameters['appWebhookSlug']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => V0WebhookDeliveryItemShowResponseModelFromJSON(jsonValue));
    }

    /**
     * List all the delivery items of an outgoing webhook of a Bitrise application
     * List the webhook delivery items of an app
     */
    async webhookDeliveryItemList(requestParameters: WebhookDeliveryItemListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<V0WebhookDeliveryItemShowResponseModel> {
        const response = await this.webhookDeliveryItemListRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Re-deliver the delivery item of a specified webhook of a Bitrise application
     * Re-deliver the webhook delivery items of an app
     */
    async webhookDeliveryItemRedeliverRaw(requestParameters: WebhookDeliveryItemRedeliverRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ServiceStandardErrorRespModel>> {
        if (requestParameters['appSlug'] == null) {
            throw new runtime.RequiredError(
                'appSlug',
                'Required parameter "appSlug" was null or undefined when calling webhookDeliveryItemRedeliver().'
            );
        }

        if (requestParameters['appWebhookSlug'] == null) {
            throw new runtime.RequiredError(
                'appWebhookSlug',
                'Required parameter "appWebhookSlug" was null or undefined when calling webhookDeliveryItemRedeliver().'
            );
        }

        if (requestParameters['webhookDeliveryItemSlug'] == null) {
            throw new runtime.RequiredError(
                'webhookDeliveryItemSlug',
                'Required parameter "webhookDeliveryItemSlug" was null or undefined when calling webhookDeliveryItemRedeliver().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // PersonalAccessToken authentication
        }

        const response = await this.request({
            path: `/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/redeliver`.replace(`{${"app-slug"}}`, encodeURIComponent(String(requestParameters['appSlug']))).replace(`{${"app-webhook-slug"}}`, encodeURIComponent(String(requestParameters['appWebhookSlug']))).replace(`{${"webhook-delivery-item-slug"}}`, encodeURIComponent(String(requestParameters['webhookDeliveryItemSlug']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ServiceStandardErrorRespModelFromJSON(jsonValue));
    }

    /**
     * Re-deliver the delivery item of a specified webhook of a Bitrise application
     * Re-deliver the webhook delivery items of an app
     */
    async webhookDeliveryItemRedeliver(requestParameters: WebhookDeliveryItemRedeliverRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ServiceStandardErrorRespModel> {
        const response = await this.webhookDeliveryItemRedeliverRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get the specified delivery item of an outgoing webhook of a Bitrise application
     * Get a specific delivery item of a webhook
     */
    async webhookDeliveryItemShowRaw(requestParameters: WebhookDeliveryItemShowRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<V0WebhookDeliveryItemResponseModel>> {
        if (requestParameters['appSlug'] == null) {
            throw new runtime.RequiredError(
                'appSlug',
                'Required parameter "appSlug" was null or undefined when calling webhookDeliveryItemShow().'
            );
        }

        if (requestParameters['appWebhookSlug'] == null) {
            throw new runtime.RequiredError(
                'appWebhookSlug',
                'Required parameter "appWebhookSlug" was null or undefined when calling webhookDeliveryItemShow().'
            );
        }

        if (requestParameters['webhookDeliveryItemSlug'] == null) {
            throw new runtime.RequiredError(
                'webhookDeliveryItemSlug',
                'Required parameter "webhookDeliveryItemSlug" was null or undefined when calling webhookDeliveryItemShow().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // PersonalAccessToken authentication
        }

        const response = await this.request({
            path: `/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}`.replace(`{${"app-slug"}}`, encodeURIComponent(String(requestParameters['appSlug']))).replace(`{${"app-webhook-slug"}}`, encodeURIComponent(String(requestParameters['appWebhookSlug']))).replace(`{${"webhook-delivery-item-slug"}}`, encodeURIComponent(String(requestParameters['webhookDeliveryItemSlug']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => V0WebhookDeliveryItemResponseModelFromJSON(jsonValue));
    }

    /**
     * Get the specified delivery item of an outgoing webhook of a Bitrise application
     * Get a specific delivery item of a webhook
     */
    async webhookDeliveryItemShow(requestParameters: WebhookDeliveryItemShowRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<V0WebhookDeliveryItemResponseModel> {
        const response = await this.webhookDeliveryItemShowRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
